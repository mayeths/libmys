[[ -n "$MYS_DIR" ]] || MYS_DIR=$(dirname $(dirname "${BASH_SOURCE[0]:-$0}"))

$SHELL --version | grep -q bash && MYS_SHELL=bash
$SHELL --version | grep -q zsh && MYS_SHELL=zsh

source $MYS_DIR/script/sh-functions.sh
[[ "$MYS_SHELL" == "bash" ]] && source $MYS_DIR/etc/bashrc
[[ "$MYS_SHELL" == "zsh"  ]] && source $MYS_DIR/etc/zshrc

command -v realpath >/dev/null 2>&1 || realpath() { mys_realpath "$@" }

env_prepend PATH "$MYS_DIR/bin"
env_prepend PYTHONPATH "$MYS_DIR/python"
if [[ -n "$MYS_MODDIR" ]]; then
    __ensured_prepend__() {
        [[ -d "$2" ]] || mkdir -p "$2" && env_prepend "$1" "$2"
    }
    __ensured_prepend__ MODULEPATH "$MYS_MODDIR/CONFIG"
    __ensured_prepend__ PATH "$MYS_MODDIR/BASE/bin"
    __ensured_prepend__ CPATH "$MYS_MODDIR/BASE/include"
    __ensured_prepend__ LD_LIBRARY_PATH "$MYS_MODDIR/BASE/lib64"
    __ensured_prepend__ LD_LIBRARY_PATH "$MYS_MODDIR/BASE/lib"
    __ensured_prepend__ MANPATH "$MYS_MODDIR/BASE/share/man"
fi

#------ Load necessary scripts
mys_load_script "$MYS_DIR/script/welcome-to-may-world.sh"

#------ Set environment variables
# export EDITOR=nvim
export PYTHONDONTWRITEBYTECODE=1
[[ $HISTSIZE -ge 50000 ]] || export HISTSIZE=50000
[[ $HISTFILESIZE -ge 50000 ]] || export HISTFILESIZE=50000
locale -a | grep -q "en_US.UTF-8" && export LANG="en_US.UTF-8" LC_ALL="en_US.UTF-8"
locale -a | grep -q "en_US.utf8"  && export LANG="en_US.utf8"  LC_ALL="en_US.utf8"

#------ Convinient alias
if [[ $(tmux -V | awk '{printf $2}' | awk -F. '{printf $1}') -ge 3 ]]; then
    alias tmux="tmux -f $MYS_DIR/etc/omt/tmux.conf"
else
    alias tmux='echo "The version of tmux is too old for libmys."; tmux'
fi
command -v code >/dev/null 2>&1 || alias code="invoke-vscode"
command -v h >/dev/null 2>&1 || alias h="history"
command -v hs >/dev/null 2>&1 || alias hs="history | grep"
command -v hsi >/dev/null 2>&1 || alias hsi="history | grep -i"
# alias v='nvim'
# alias vi="nvim"
# alias vim='nvim'
# alias vimdiff='nvim -d'
# alias view="nvim -R"
# If wanna the alias affect shell script, use function instead
# mys_backup_command echo old_echo && echo() { old_echo -e "$@" }
